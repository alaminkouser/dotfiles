#!/usr/bin/env sh

if [ "$NOTEBOOK_PATH" = "" ]; then
    echo "NOTEBOOK_PATH is not set"
    exit 1
fi

if [ "$GEMINI_API_KEY" = "" ]; then
    echo "GEMINI_API_KEY is not set"
    exit 1
fi

if ! command -v prettier >/dev/null 2>&1; then
    echo "prettier is not installed"
    exit 1
fi

if ! command -v git >/dev/null 2>&1; then
    echo "git is not installed"
    exit 1
fi

if ! command -v curl >/dev/null 2>&1; then
    echo "curl is not installed"
    exit 1
fi

if ! command -v jq >/dev/null 2>&1; then
    echo "jq is not installed"
    exit 1
fi

if ! command -v markdownlint-cli2 >/dev/null 2>&1; then
    echo "markdownlint-cli2 is not installed"
    exit 1
fi


$EDITOR $NOTEBOOK_PATH/README.md

# Run everything from Gemini API call to end in background (silently)
{
    prettier --write $NOTEBOOK_PATH > /dev/null 2>&1

    git -C $NOTEBOOK_PATH add --all

    GIT_DIFF=$(git -C $NOTEBOOK_PATH diff --cached)

    if [ "$GIT_DIFF" = "" ]; then
        exit 0
    fi

    gemini_response=$(curl -s "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent" \
      -H 'Content-Type: application/json' \
      -H "X-goog-api-key: $GEMINI_API_KEY" \
      -X POST \
      -d "{
        \"contents\": [
          {
            \"parts\": [
              {
                \"text\": \"You are an assistant that writes git commit messages.\nI will provide the output of `git diff`.\nYour task: summarize the changes into a short, clear commit message.\n\nGuidelines:\n\n* Keep it under 72 characters.\n* A phrase or keywords are enough (no need for full sentences).\n* Focus on *what changed* and *why*.\n\nHere is the git diff:\\n\\n$GIT_DIFF\"
              }
            ]
          }
        ]
      }")

    gemini_response_without_newlines=$(echo "$gemini_response" | tr "\n" " ")

    commit_message=$(echo "$gemini_response_without_newlines" | jq -r ".candidates[0].content.parts[0].text")

    if [ "$commit_message" = "" ]; then
        exit 1
    fi

    git -C $NOTEBOOK_PATH commit -m "$commit_message" > /dev/null 2>&1

    git -C $NOTEBOOK_PATH push > /dev/null 2>&1
} > /dev/null 2>&1 &
